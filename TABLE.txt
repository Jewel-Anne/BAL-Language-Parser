LEXEME	Token			
{	Delimiter_OpenBracket
}	Delimiter_CloseBracket
;	Terminator
(	Delimiter_OpenParenthesis
)	Delimiter_CloseParenthesis
+	Addition_Operator
-	Subtraction_Operator
*	Multiplication_Operator
/	Division_Operator
%	Modulo_Operator
?	IntDivision_Operator
^	Exponent_Operator
+=	Assign_Operator
-=	Assign_Operator
*=	Assign_Operator
/=	Assign_Operator
++	Operator
--	Operator
=	Assign_Operator
&&	Logical_Operator
||	Logical_Operator
!	Logical_Operator
==	Relational_Operator
>	Relational_Operator
<	Relational_Operator
!=	Relational_Operator
>=	Relational_Operator
<=	Relational_Operator
~	SingleComment
~ ~	DoubleComment
getchi	Scan_Key
bounce	    Print_Key
bounceln	Print_Key
pano	Noiseword
paano_kung	    IfKey
elsa_paano_kung	ElseIfKey
elsa	ElseKey
waylalu	While_Key
booly	Bool_dt
giginteger	    Integer_dt
dobol	Double_dt
mcfloat	Float_dt
char	Char_dt
istring	String_dt
void	Void_Key
*istr	StringLiteral
*char	CharLiteral
*giginteger	IntegerLiteral
*mcfloat	FloatLiteral
nugagawen	    Do_Key
1     	Identifier
0	    Wrong_Input
*true 	boolLiteral
*false	boolLiteral
,	    Comma
"	    Delimiter_Quote
'	    Delimiter_SingQuote
:	    Delimiter_Colon
